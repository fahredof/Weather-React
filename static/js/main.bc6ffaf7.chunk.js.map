{"version":3,"sources":["components/FavoritesCities/svg/crossButton.svg","components/Header/svg/icon.svg","components/FavoritesCities/svg/addButton.svg","components/Header/Header.js","components/Spinner/Spinner.js","components/DefaultWeather/DefaultWeather.js","components/DetailWeather/DetailWeather.js","components/FavoritesCities/FavoritesCities.js","functions/getWeather.js","components/App/App.js","functions/getCoordinates.js","reducer/index.js","store/store.js","index.js"],"names":["module","exports","Header","props","className","onClick","event","preventDefault","updateGeolocation","src","icon","alt","Spinner","DefaultWeather","id","city","temp","toFixed","image","DetailWeather","wind","overcast","pressure","humidity","coordinatesLat","coordinatesLon","FavoritesCities","cityData","getWeather","deleteCity","useState","inputText","setInputText","condition","setCondition","error","onClickAddButton","onChangeInput","target","value","onClickAddCity","onClickDelete","type","onChange","JSON","stringify","crossButton","addButton","renderSwitch","getWeatherByCity","api_key","a","fetch","response","ok","json","dataByCity","status","getWeatherByCoordinates","latitude","longitude","dataByCoor","API_KEY","CITY_DEFAULT","App","state","cities","mainCity","parseData","data","name","country","sys","main","weather","speed","description","coord","lat","lon","addCity","newState","setState","addMainCity","getDefaultWeather","cityName","showCoordinate","position","latCor","coords","lonCor","getWeatherByCoor","callback","navigator","geolocation","getCurrentPosition","console","log","parse","localStorage","getItem","this","setItem","map","key","React","Component","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc6ffaf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crossButton.d5cb98e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.50e1ca37.svg\";","module.exports = __webpack_public_path__ + \"static/media/addButton.8e1d6ae8.svg\";","import React from \"react\";\nimport \"./Header.css\";\nimport icon from \"./svg/icon.svg\"\n\nconst Header = (props) => {\n\n  const onClick = (event) => {\n    event.preventDefault();\n    props.updateGeolocation();\n  }\n\n  return (\n    <div className=\"header\">\n      <form onClick={onClick}>\n        <img src={icon} alt=\"icon\"/>\n      </form>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Spinner.css\"\n\nconst Spinner = (props) => {\n\n  return(\n    <div className=\"loader\"/>\n  )\n}\n\nexport default Spinner;\n","import React from \"react\";\nimport \"./DefaultWeather.css\"\nimport Spinner from \"../Spinner/Spinner\"\n\nconst DefaultWeather = (props) => {\n\n  return(\n    <div className=\"def\" id=\"def\">\n    { props.city ?\n      <div className=\"default\">\n        <p className=\"city\">{props.city}</p>\n        <p className=\"temp\">{(props.temp - 273.15).toFixed(0)} Â°C</p>\n        <div className=\"image\">\n        <img src={\"http://openweathermap.org/img/wn/\" + props.image + \"@2x.png\"} alt=\"\"/>\n        </div>\n      </div>\n      : <Spinner/>\n    }\n    </div>\n  )\n}\n\nexport default DefaultWeather;\n","import React from \"react\"\nimport \"./DetailWeather.css\"\nimport Spinner from \"../Spinner/Spinner\"\n\nconst DetailWeather = (props) => {\n  return(\n    <div className=\"details\">\n    { props.wind ?\n      <div>\n        <p>Wind {props.wind} m/s</p>\n        <p>Overcast {props.overcast}</p>\n        <p>Pressure {props.pressure} hpa</p>\n        <p>Humidity {props.humidity} %</p>\n        <p>Coordinates [{props.coordinatesLat},{props.coordinatesLon}]</p>\n      </div>\n      : <Spinner/>\n    }\n    </div>\n  )\n}\n\nexport default DetailWeather;\n","import React, {useState} from \"react\";\nimport \"./FavoritesCities.css\"\nimport Spinner from \"../Spinner/Spinner\"\nimport addButton from './svg/addButton.svg'\nimport crossButton from './svg/crossButton.svg'\n\nconst FavoritesCities = ({id, cityData, getWeather, deleteCity}) => {\n  const [inputText, setInputText] = useState('');\n  const [condition, setCondition] = useState('Add');\n  const {\n      city,\n      temp,\n      image,\n      wind,\n      overcast,\n      pressure,\n      humidity,\n      coordinatesLat,\n      coordinatesLon,\n      error\n  } = cityData ? cityData : {};\n\n  const onClickAddButton = () => {\n    setCondition('Input');\n  }\n\n  const onChangeInput = (event) => {\n    setInputText(event.target.value);\n  }\n\n  const onClickAddCity = (event) => {\n    event.preventDefault();\n    setCondition('List');\n    getWeather(id, inputText);\n  }\n\n  const onClickDelete = () => {\n    deleteCity(id);\n    setCondition(' ');\n  }\n\n  const renderSwitch = () => {\n    switch (condition) {\n      case 'Input':\n        return(\n          <div id=\"input\">\n            <form>\n              <input type=\"text\" value={inputText} onChange={onChangeInput}/>\n              <button type=\"submit\" onClick={onClickAddCity}>Add</button>\n            </form>\n          </div>\n        )\n      case 'List':\n        return(\n          JSON.stringify(cityData) !== '{}' ?\n            !error ?\n            <div id=\"list\">\n              <div className=\"city\">{city}</div>\n              <div className=\"temp\">{(temp - 273.15).toFixed(0)}Â°C</div>\n              <div className=\"image\">\n              <img src={\"http://openweathermap.org/img/wn/\" + image + \"@2x.png\"} alt=\"\"/>\n              </div>\n              <div className=\"wind\">Wind {wind} m/s</div>\n              <div className=\"overcast\">{overcast}</div>\n              <div className=\"pressure\">Pressure {pressure} hpa</div>\n              <div className=\"humidity\">Humidity {humidity} %</div>\n              <div className=\"coordinates\">Coordinates [{coordinatesLat},{coordinatesLon}]</div>\n              <div className=\"crossButton\">\n              <img src={crossButton} alt=\"\" onClick={onClickDelete}/>\n              </div>\n            </div>\n            : <div id=\"list\">\n            <div className=\"wind\">{error}</div>\n            <div className=\"crossButton\">\n            <img src={crossButton} alt=\"\" onClick={onClickDelete}/>\n            </div>\n            </div>\n\n          : <Spinner/>\n        )\n        default :\n          return(\n            <div id={\"addButton\"}>\n              <img src={addButton} alt=\"icon\" onClick={onClickAddButton}/>\n            </div>\n          )\n      }\n  }\n\n  return(\n    <div id={\"city\" + id} className=\"favCity\">\n      {renderSwitch()}\n    </div>\n  )\n}\n\nexport default FavoritesCities;\n","\n\nasync function getWeatherByCity (api_key, city) {\n  const response =\n\tawait fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}`);\n  let dataByCity;\n  if (response.ok) {\n    dataByCity = await response.json();\n  } else {\n    dataByCity = {error: 'The server responded with a status of ' + response.status}\n  }\n\treturn dataByCity;\n}\n\nasync function getWeatherByCoordinates (api_key, latitude, longitude) {\n  const response =\n  await fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${api_key}`);\n  let dataByCoor;\n  if (response.ok) {\n    dataByCoor = await response.json();\n  } else {\n    dataByCoor = {error: response.status}\n  }\n  return dataByCoor;\n}\n\nexport {\n  getWeatherByCity,\n  getWeatherByCoordinates\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport Header from \"../Header/Header\"\nimport DefaultWeather from \"../DefaultWeather/DefaultWeather\"\nimport DetailWeather from \"../DetailWeather/DetailWeather\"\nimport FavoritesCities from \"../FavoritesCities/FavoritesCities\"\nimport {getWeatherByCity, getWeatherByCoordinates} from \"../../functions/getWeather.js\"\nimport {getCoordinates} from \"../../functions/getCoordinates.js\"\n\nconst API_KEY = \"f77919380546d1f6ef8015d53089ba0e\";\nconst CITY_DEFAULT = \"New York\";\n\nclass App extends React.Component {\n\n  state = {\n    cities: [{},{},{}],\n    mainCity: {}\n  };\n\n  parseData = (data) => {\n    if (!data.error)\n      return ({\n        city: data.name,\n        country: data.sys.country,\n        temp: data.main.temp,\n        image: data.weather[0].icon,\n        wind: data.wind.speed,\n        overcast: data.weather[0].description,\n        pressure: data.main.pressure,\n        humidity: data.main.humidity,\n        coordinatesLat: data.coord.lat,\n        coordinatesLon: data.coord.lon\n      })\n    else\n      return({error: data.error})\n  }\n\n  addCity = (id, data) =>{\n    const newState = {...this.state};\n    newState.cities[id - 1] = this.parseData(data);\n    this.setState(newState);\n  }\n\n  deleteCity = (id) => {\n    const newState = {...this.state};\n    newState.cities[id - 1] = {};\n    this.setState(newState);\n  }\n\n  addMainCity = (data) => {\n    this.setState({\n      ...this.state,\n      mainCity: this.parseData(data)\n    });\n  }\n\n  getDefaultWeather = async () => {\n    let data = await getWeatherByCity(API_KEY, CITY_DEFAULT);\n    this.addMainCity(data);\n  }\n\n  getWeather = async (id, cityName) => {\n    let data = await getWeatherByCity(API_KEY, cityName);\n    this.addCity(id, data);\n  }\n\n  showCoordinate = async (position) => {\n  \tlet latCor = position.coords.latitude;\n  \tlet lonCor = position.coords.longitude;\n    let data = await getWeatherByCoordinates(API_KEY, latCor, lonCor);\n    this.addMainCity(data);\n  }\n\n  getWeatherByCoor = () => {\n    this.setState({\n      ...this.state,\n      mainCity: {}\n    });\n    getCoordinates(this.showCoordinate, this.getDefaultWeather);\n  }\n\n  componentDidMount() {\n    console.log(JSON.parse(localStorage.getItem('state')));\n    this.getWeatherByCoor();\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('state', JSON.stringify({\n      cities: [\n        this.state.cities[0].city,\n        this.state.cities[1].city,\n        this.state.cities[2].city\n      ]\n    }));\n  }\n\n  render() {\n    return(\n    <div className=\"body\">\n      <Header updateGeolocation={this.getWeatherByCoor}/>\n      <DefaultWeather\n        city = {this.state.mainCity.city}\n        temp = {this.state.mainCity.temp}\n        image = {this.state.mainCity.image}\n      />\n      <DetailWeather\n        wind = {this.state.mainCity.wind}\n        overcast = {this.state.mainCity.overcast}\n        pressure = {this.state.mainCity.pressure}\n        humidity = {this.state.mainCity.humidity}\n        coordinatesLat = {this.state.mainCity.coordinatesLat}\n        coordinatesLon = {this.state.mainCity.coordinatesLon}\n      />\n      {this.state.cities.map((city, id) => (<FavoritesCities\n        id={id + 1}\n        key={id}\n        cityData={this.state.cities[id]}\n        getWeather={this.getWeather}\n        deleteCity={this.deleteCity}\n      />\n      ))}\n    </div>\n    );\n  }\n}\n\nexport default App;\n","function getCoordinates(callback, error) {\n  navigator.geolocation.getCurrentPosition(callback, error);\n}\n\nexport {getCoordinates}\n","const reducer = (state = (\" \"), action) => {\n\n}\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from '../reducer';\n\nconst store = createStore(reducer);\n\nconst storeTemplate = {\n  apiKey: '9c2f796d45e91e5c01a2ae26f1613625',\n  cityDefault: 'Moscow',\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.js';\nimport \"./index.css\"\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}